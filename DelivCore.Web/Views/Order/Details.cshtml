@using DelivCore.DataLayer.Constants
@using Microsoft.Ajax.Utilities
@model global::DelivCore.Models.Orders.OrderDetailsModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

@using (Html.BeginForm("AddOrderOffer", "Order", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="text-right container-fluid command-buttons">
        @Html.ActionLink("Back to list", "Index", "Order", null, new { @class = "btn btn-warning" })
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Id, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(m => m.Id, new { htmlAttributes = new { @class = "form-control", id = "OrderId", @disabled="disabled" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(m => m.DeliveryAddress, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", id="OrderDescription" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Client.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(m => m.Client.LastName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.StartAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(m => m.StartAddress, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                </div>
            </div>
        </div>
    </div>
    <hr/>
    if (Model.Status == StatusConstants.Processed)
    {
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Orders
                    </div>
                    <div class="panel-body">
                        <table class="table table-striped table-bordered table-hover display" width="100%" id="orders-grid">
                            <thead>
                            <tr>
                                <th>Id</th>
                                <th>Time</th>
                                <th>Courier</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (Model.Status == StatusConstants.Unprocessed)
    {        
        <div align="center">
            <button type="button" class="btn btn-primary" onclick="CreateOrderOffer();">Create order offer!</button>
        </div>

    }
    else
    {
        <code></code>
    }
    
}

@section scripts
{
    <script type="text/javascript">
        $('#orders-grid')
            .DataTable({
                ajax: '@Url.Action("GetDeliveryOffers", "Order", new {Id = Model.Id})',
                columns: [
                    { data: 'Id' },
                    {
                        data: 'Time',
                        render: function(data, type, row) {
                            return formatLocalTime(data);
                        }
                    },
                    { data: 'Courier.LastName' },
                    {
                        data: 'Id',
                        render: function(data) {
                            return '<a href="/Order/AcceptOffer/' + data + '">Take offer</a>';
                        }

                    }
                ],
                ordering: true,
                searching: true
            });

        function CreateOrderOffer() {
            var orderIdValue = document.getElementById("OrderId").value;
            var orderDescriptionValue = document.getElementById("OrderDescription").value;
            $.ajax({
                type: "POST",
                url: "/Order/AddOrderOffer",
                data: { orderId: orderIdValue, description: orderDescriptionValue },
                success: function() {
                    window.location.reload(); //window.location.href = "/Order/Index";
                }
            });
        }
    </script>
}
